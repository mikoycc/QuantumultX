[general]
#🖤对 server_check_url 指定的网址进行相应测试，以确认节点的可用性。你同样可以在 server_local/remote 中，为节点、订阅单独指定 server_check_url 参数，如为节点单独指定了 url，则所有相关延迟测试中，均会采用此 url 地址
server_check_url=http://www.gstatic.com/generate_204

#🖤节点延迟测试超时参数，需小于 3000 毫秒才生效
server_check_timeout=3000

#🖤资源解析器，可用于自定义各类远程资源的转换，如节点，规则 filter，复写 rewrite 等，url 地址可远程，可本地/iCloud(Quantumult X/Scripts目录)
resource_parser_url= https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

#🖤geo_location_checker 用于节点页面的节点信息展示，可完整自定义展示内容与方式
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://github.com/KOP-XIAO/QuantumultX/raw/master/Scripts/IP_API.js

#🖤第一个filter为4g模式开启规则分流，第二个filter为其他wifi下开启规则分流，第三个wifi1修改成你路由器翻墙的wifi名开启直连模式，第四个wifi2为你公司或者其他有路由器翻墙的WiFi名走直连，默认关闭。根据wifi切换模式，如需开启，删除下方的“#”即可
#running_mode_trigger=filter, filter, wifi1:all_direct, wifi2: all_direct

#🖤运行模式模块，running_mode_trigger 设置，即根据网络自动切换 分流/直连/全局代理 等模式
#👉running-mode-trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活
#👉前两个filter先后表示在 [数据蜂窝网络] 跟 [一般 Wi-Fi] 下，走 filter(分流)模式，后面则表示在 asus-5g 下切换为全局直连[all_direct]，asus 表示切换为全局代理[all_proxy]
#running_mode_trigger=filter, filter, asus-5g:all_direct, asus:all_proxy

#🖤ssid_suspended_list，让 Quantumult X 在特定 Wi-Fi 网络下暂停工作(仅 task 模块会继续工作)，多个Wi-Fi用“,”连接。如需使用，相应 SSID 换成你自己 Wi-Fi 名即可
#ssid_suspended_list=Asus, Shawn-Wifi

#🖤dns exclusion list中的域名将不使用fake-ip方式，其它域名则全部采用 fake-ip及远程解析的模式
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.qq.com, *.cmbchina.com, id6.me

#🖤UDP 白名单，留空则默认所有为端口，不在udp白名单列表中的端口，将被丢弃处理（返回 ICMP  “端口不可达” 信息）
#udp_whitelist=1-442, 444-65535

#🖤UDP Drop名单，同白名单类似，但不会返回 ICMP “端口不可达” 信息。Drop 名单仅处理 whitelist名单中的端口
#udp_drop_list = 1900, 80

#🖤参数 fallback_udp_policy 仅支持 v1.0.19 以及之后的版本。参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）
fallback_udp_policy=direct

#🖤下列表中的内容将不经过 QuantumultX的处理，设置后建议重启设备
#excluded_routes=192.168.0.0/16, 193.168.0.0/24, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, 17.0.0.0/8

#🖤指定 DoH 请求所使用的 User-Agent
#doh_user_agent=Agent/1.0

#🖤指定服务器测试时所使用的 User-Agent
#server_check_user_agent = Agent/1.0

#🖤默认当 DNS 层面某domain 被reject时，将返回loopback IP。你可以通过下面的参数修改成为 “no-error-no-answer”，或者 “nxdomain”
#dns_reject_domain_behavior = loopback


[dns]
#🖤禁用系统 DNS 以及 ipv6
no-system
no-ipv6
#🖤支持参数 excluded_ssids , included_ssids(1.0.29+) 指定在特定 Wi-Fi下失效/生效

#🖤circumvent-ipv4-answer, circumvent-ipv6-answer 参数
#👉1、当并发向多个上游 DNS 进行查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果（如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录）
#👉2、如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败
#👉3、如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数
#circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
#circumvent-ipv6-answer = ::

#🖤如需使用 DoH3，DNS over HTTP/3，请开启下面参数
#prefer-doh3

#🖤指定 dns 服务器，并发响应选取最优结果
#👉阿里云
server=223.5.5.5
server=223.6.6.6
#👉全国通用DNS地址
server=114.114.114.114
#👉腾讯旗下DNSPod推出的公共域名
server=119.29.29.29

#🖤如指定 doh 服务，则上面的一般 dns 解析均失效 额外参数，在特定网络下禁用该doh
#doh-server=xxx.com, excluded_ssids=SSID1, SSID2

#👉1.0.29 版本后支持多个 doh 并发
#doh-server=xx1.com,xx2.com,excluded_ssids=SSID1, SSID2

#👉1.0.29 版本后支持 alias 映射类型
#alias=/example.com/another-example.com

#🖤如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效
#doq-server = quic://dns.adguard.com
#doq-server = quic://dns1.example.com, quic://dns2.example.com
#doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
#doq-server = quic://dns.adguard.com, included_ssids=SSID2

#🖤指定域名解析dns, 下面为示范，按需启用, 同样支持 excluded_ssids/included_ssids 参数
#server=/*.taobao.com/223.5.5.5, excluded_ssids=My-Wifi, Your-Wifi
#server=/*.tmall.com/223.5.5.5, included_ssids=His-Wifi
#server=/example1.com/8.8.4.4
#server=/*.example2.com/223.5.5.5
#server=/example4.com/[2001:4860:4860::8888]:53
#address=/example5.com/192.168.16.18
#address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
#👉映射域名到其它域名的类型
#alias = /example7.com/another-example.com

#🖤Firebase Cloud Messaging
#address=/mtalk.google.com/108.177.125.188

#🖤Google Dl
#server=/dl.google.com/119.29.29.29
#server=/dl.l.google.com/119.29.29.29
#server=/update.googleapis.com/119.29.29.29
#server=/*.dl.playstation.net/119.29.29.29

#🖤Apple TestFlight
#server=/*testflight.apple.com/8.8.4.4
#server=/*.icloud.com/119.29.29.29
#server=/*.icloud.com.cn/119.29.29.29
#server=/*.tencent.com/119.29.29.29
#server=/*.weixin.com/119.29.29.29


[task_local]
#🖤包含3种类型: cron 定时任务，UI交互脚本，网络切换脚本
#👉js文件放于iCloud或者本机的Quantumult X/Scripts 路径下。TF版本可直接使用远程js链接
#👉从 “分” 开始的5位cron 写法，具体 cron 表达式可自行 Google
#👉tag参数为 task 命名标识;
#👉img-url参数用于指定 task 的图标(108*108)

#🖤1.任务模块，可用于签到,天气话费查询等

#🖤2.UI交互查询脚本示范，在首页长按 节点/策略组 唤出
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询，img-url=checkmark.seal.system, enabled=true

#🖤3.网络切换/变化时 触发的脚本类型
#event-network sample-taks.js


[server_remote]
#🖤服务器远程订阅


[policy]
#🖤策略组[policy]部分
#👉static 策略组中，你需要手动选择想要的节点/策略组
#👉available 策略组将按顺序选择你列表中第一个可用的节点
#👉round-robin 策略组，将按列表的顺序轮流使用其中的节点
#👉url-latency-benchmark 延迟策略组，选取延迟最优节点
#👉dest-hash 策略组，随机负载均衡，但相同域名走固定节点
#👉ssid 策略组，将根据你所设定的网络来自动切换节点/策略组
#👉img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）
#👉direct/proxy/reject 则只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)
#👉server-tag-regex 以及 resource-tag-regex 参数用于正则筛选来建立策略组
#👉具体可参见教程部分: https://shrtm.nu/DAFP

#🖤以下是quantumultX的3种普通策略组类型写法，也可以用正则参数 server-tag-regex 或者 resource-tag-regex 来筛选
#static=policy-name-1, Sample-A, Sample-B, Sample-C
#available=policy-name-2, Sample-A, Sample-B, Sample-C
#round-robin=policy-name-3, Sample-A, Sample-B, Sample-C
#url-latency-benchmark=policy-name-4, Sample-A, Sample-B, Sample-C
#dest-hash=policy-name-5, Sample-A, Sample-B, Sample-C
#🖤下面是ssid策略组的示范
#ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

#🖤默认设置10分钟测速一次，当前使用节点延迟和最新测速延迟最低的节点相差5ms以上则切换为最新的最低延迟节点，否则继续延用。
static=节点选择,手动选择, 🇯🇵日本, 🇺🇸美国, 🇨🇳台湾, 🇰🇷韩国, 🇭🇰香港, 🇸🇬新加坡, 🇳🇱荷兰, 🇷🇺俄罗斯, 🇩🇪德国, 🇫🇷法国, 🇨🇭瑞士, 🇬🇧英国, 🇸🇪瑞典, 🇧🇬保加利亚, 🇦🇹奥地利, 🇮🇪爱尔兰, 🇹🇷土耳其, 🇮🇹意大利, 🇭🇺匈牙利, 🇨🇦加拿大, 🇦🇺澳大利亚, 🇮🇳印度, 🇮🇩印尼, 🇧🇷巴西, 🇦🇷阿根廷, 🇨🇱智利,img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png

static=手动选择,direct,server-tag-regex=.*, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Static.png

url-latency-benchmark=🇯🇵日本, server-tag-regex=日本|🇯🇵, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇺🇸美国, server-tag-regex=美国|🇺🇸, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇰🇷韩国, server-tag-regex=韩国|🇰🇷, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇭🇰香港, server-tag-regex=香港|🇭🇰, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇨🇳台湾, server-tag-regex=台湾|🇨🇳, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇸🇬新加坡, server-tag-regex=新加坡|🇸🇬, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇳🇱荷兰, server-tag-regex=荷兰|🇳🇱, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇷🇺俄罗斯, server-tag-regex=俄罗斯|🇷🇺, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇩🇪德国, server-tag-regex=德国|🇩🇪, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇫🇷法国, server-tag-regex=法国|🇫🇷, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇨🇭瑞士, server-tag-regex=瑞士|🇨🇭, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇬🇧英国, server-tag-regex=英国|🇬🇧, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇸🇪瑞典, server-tag-regex=瑞典|🇸🇪, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇧🇬保加利亚, server-tag-regex=保加利亚|🇧🇬, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇦🇹奥地利, server-tag-regex=奥地利|🇦🇹, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇮🇪爱尔兰, server-tag-regex=爱尔兰|🇮🇪, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇹🇷土耳其, server-tag-regex=土耳其|🇹🇷, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇮🇹意大利, server-tag-regex=意大利|🇮🇹, check-interval=600,tolerance=5, alive-checking=false
url-latency-benchmark=🇭🇺匈牙利, server-tag-regex=匈牙利|🇭🇺, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇨🇦加拿大, server-tag-regex=加拿大|🇨🇦, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇦🇺澳大利亚, server-tag-regex=澳大利亚|🇦🇺, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇮🇳印度, server-tag-regex=印度|🇮🇳, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇮🇩印尼, server-tag-regex=印尼|🇮🇩, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇧🇷巴西, server-tag-regex=巴西|🇧🇷, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇦🇷阿根廷, server-tag-regex=阿根廷|🇦🇷, check-interval=600, tolerance=5, alive-checking=false
url-latency-benchmark=🇨🇱智利, server-tag-regex=智利|🇨🇱, check-interval=600, tolerance=5, alive-checking=false

static=国际流媒体,节点选择,手动选择,🇭🇰香港, 🇨🇳台湾, 🇯🇵日本, 🇺🇸美国, 🇸🇬新加坡, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming.png
static=国内流媒体, direct, 🇭🇰香港, 🇨🇳台湾, 🇯🇵日本, 🇺🇸美国, 🇸🇬新加坡,img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/StreamingCN.png
static=Telegram,节点选择,手动选择,🇭🇰香港, 🇨🇳台湾, 🇯🇵日本, 🇺🇸美国, 🇸🇬新加坡, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
static=Instagram,节点选择,server-tag-regex=.*,img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Instagram.png
static=YouTube,节点选择,手动选择, 🇭🇰香港, 🇨🇳台湾, 🇯🇵日本, 🇺🇸美国, 🇸🇬新加坡, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
static=Spotify,节点选择,手动选择, 🇭🇰香港, 🇨🇳台湾, 🇯🇵日本, 🇺🇸美国, 🇸🇬新加坡, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
static=Netflix,节点选择,手动选择, 🇭🇰香港, 🇨🇳台湾, 🇯🇵日本, 🇺🇸美国, 🇸🇬新加坡, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png
static=Disney+,节点选择,手动选择, 🇭🇰香港, 🇨🇳台湾, 🇯🇵日本, 🇺🇸美国, 🇸🇬新加坡, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Disney+.png

static=🐟漏网之鱼,节点选择, direct, reject, img-url=https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Final.png


[filter_remote]
#🖤远程分流模块，可使用force-policy来强制使用策略偏好, 替换远程规则内所指定的策略组
#👉update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时
#👉opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器
#👉支持本地/iCloud规则文件，位于Quantumult X/Profiles路径下
#filter.txt, tag=本地分流, opt-parser=false, enabled=false

#🖤Unbreak 后续规则修正
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL/Unbreak.list, tag=🎯规则修正-直连, update-interval=86400, opt-parser=false, enabled=true, force-policy=direct
#🖤Privacy 隐私
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL/Privacy.list, tag=🛑隐私保护-拒绝, update-interval=86400, enabled=true, force-policy=reject
#🖤Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL/Hijacking.list, tag=🛑运营商劫持-拒绝, update-interval=86400, enabled=true, force-policy=reject
#🖤YouTube
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL2/YouTube.list, tag=YouTube, update-interval=86400, enabled=true, force-policy=YouTube
#🖤Spotify
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL2/Spotify.list, tag=Spotify, update-interval=86400, enabled=true, force-policy=Spotify
#🖤Netflix
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL2/Netflix.list, tag=Netflix, update-interval=86400, enabled=true, force-policy=Netflix
#🖤Disney+
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL2/Disney.list, tag=Disney+, force-policy=Disney+, update-interval=86400, opt-parser=false, enabled=true
#🖤Telegram
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL2/Telegram.list, tag=Telegram, update-interval=86400, enabled=true, force-policy=Telegram
#🖤Instagram
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL2/Instagram.list,tag=Instagram, update-interval=86400, enabled=true, force-policy=Instagram
#🖤Streaming 国际流媒体服务
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL1/Streaming.list, tag=Streaming国际流媒体服务, update-interval=86400, enabled=true, force-policy=国际流媒体
#🖤国内流媒体服务（面向海外版本）
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL1/StreamingSE.list, tag=国内流媒体, update-interval=86400, enabled=true, force-policy=国内流媒体
#🖤Global 全球加速
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL1/Global.list, tag=Global全球加速, update-interval=86400, enabled=true, force-policy=节点选择
#🖤苹果服务
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL1/Apple.list, tag=苹果服务, update-interval=86400, enabled=true, force-policy=direct
#🖤China 国内直连
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FL1/Chinas.list, tag=🎯国内直连, update-interval=86400, enabled=true, force-policy=direct


[rewrite_remote]
#🖤rewrite 复写远程订阅
#👉远程复写模块，内包含主机名hostname以及复写rewrite规则
#👉update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时
#👉opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器
#👉支持本地/iCloud的复写规则文件，位于Quantumult X/Profiles路径下
#👉rewrite.txt, tag=本地复写, opt-parser=false, enabled=false

https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FX/TestFlightDownload/TestFlightDownload.conf, tag=TestFlight区域限制解除, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/mikoycc/QuantumultX/main/FX/General/General.conf, tag=复写通用, update-interval=86400, opt-parser=false, enabled=true


[server_local]
#🖤本地服务器部分
#👉以下示范都是 ip(域名):端口，
#👉比如 vmess-a.203.167.55.4:777 ，实际是 203.167.55.4:777
#👉前面的 ss-a，ws-tls这些，只是为了让你快速找到自己节点的类型
#👉实际使用时，请不要真的 傻乎乎的 写 vmess-a.203.167.55.4:777 这种。
#👉目前支持 shadowsocks/shadowsocksR/Vmess/Trojan/http(s)/Socks5 等类型
#👉支持 tls-cert-sha256 以及 tls-pubkey-sha256 参数等自定义TLS验证

#🖤shadowsocks以及shadowsocksR类型, 支持 V2-Plugin
#👉支持UDP，支持UDP-OVER-TCP（版本1.0.29 665+）
#shadowsocks=ss-a.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=Sample-A
#shadowsocks=ss-b.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=Sample-B
#shadowsocks=ss-c.example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=Sample-C
#shadowsocks=ssr-a.example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=Sample-D
#shadowsocks=ws-a.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-E
#shadowsocks=ws-b.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=Sample-F
#shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-G
#shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, udp-over-tcp=true fast-open=false, udp-relay=false, tag=Sample-H

#🖤vmess 类型，ws，wss(ws+tls),over-tls,tcp，支持 UDP
#👉vmess 类型节点默认开启 aead，关闭请用 aead=false
#👉ws 类型
#vmess=ws-c.example.com:80, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-c.example.com, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, aead=false, tag=Sample-H
#👉wss(ws+tls) 类型
#vmess=ws-tls-b.example.com:443, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-tls-b.example.com, obfs=wss, obfs-uri=/ws, tls-verification=true,fast-open=false, udp-relay=false, tag=Sample-I
#👉http 类型
#vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vmess-http
#👉tcp 类型
#vmess=vmess-a.example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-J
#vmess=vmess-b.example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-K
#👉over-tls 类型
#vmess=vmess-over-tls.example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=vmess-over-tls.example.com, obfs=over-tls, tls-verification=true, fast-open=false, udp-relay=false, tag=Sample-L
#👉http(s) 类型
#http=http.example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http
#http=https.example.com:443, username=name, password=pwd, over-tls=true, tls-verification=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls

#🖤socks5 类型节点
#socks5=example.com:80,fast-open=false, udp-relay=false, tag=socks5-01
#socks5=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=socks5-02
#socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=socks5-tls-01
#socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=socks5-tls-02

#🖤trojan 类型, 支持 over-tls 以及 websockets，支持 UDP
#trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=true, tag=trojan-tls-01
#trojan=example1.com:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
#trojan=192.168.1.1:443, password=pwd, obfs=wss, obfs-host=example.com, obfs-uri=/path, udp-relay=true, tag=trojan-wss-05

#🖤用来掩盖首页，节点一大串信息的，不喜欢就#掉
http=106.52.127.72:19951, fast-open=false, udp-relay=false, tag= 解锁节点


[filter_local]
#🖤本地分流规则(对于完全相同的某条规则，本地的将优先生效)
#👉如开启其他设置中的  “分流匹配优化” 选项，则匹配优先级为:
#host > host-suffix > host-keyword(wildcard) > geoip = ip-cidr > user-agennt
#🖤完整域名匹配
#host, www.google.com, proxy
#🖤域名关键词匹配
#host-keyword, adsite, reject
#🖤域名后缀匹配
#host-suffix, googleapis.com, proxy
#🖤域名通配符匹配
#host-wildcard, *abc.com, proxy
#🖤User-Agent 匹配
#user-agent, ?abc*, proxy
#🖤强制分流走蜂窝网络
#host-suffix, googleapis.com, proxy, force-cellular
#🖤让分流走蜂窝网络跟 Wi-Fi 中的优选结果
#host-suffix, googleapis.com, proxy, multi-interface
#🖤让分流走蜂窝网络跟 Wi-Fi 中的负载均衡，提供更大带宽出入接口
#host-suffix, googleapis.com, proxy, multi-interface-balance
#🖤指定分流走特定网络接口
#host-suffix, googleapis.com, proxy, via-interface=pdp_ip0
#🖤%TUN% 参数，回传给 Quantumult X 接口，可用于曲线实现代理链功能
#host-suffix, example.com, ServerA, via-interface=%TUN%
#ip-cidr, ServerA's IP Range, ServerB

#🖤ip规则
host-suffix, local, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/24, direct

#🖤ipv6规则
#ip6-cidr, 2001:4860:4860::8888/32, direct
#ip6-cidr, fe80::/10, direct
#🖤已采用 ip 池数据，因此注释掉 geoip cn
#geoip, cn, direct
#🖤1.0.28 build628 后支持如下的geoip库写法（需 GEO-IP 库支持）
#geoip, netflix, proxy

#🖤不在上述规则中（远程以及本地）的剩余请求，将走final 指定的节点/策略，这里即是 → 🐟 漏网之鱼, 请根据自己的需求来选择直连或节点、策略
FINAL,🐟漏网之鱼


[rewrite_local]
#🖤本地复写规则


[mitm]
#🖤请自行在 APP 的UI中 生成证书 并安装&信任（💡请按确保照文字提示操作💡）
skip_validating_cert = true
force_sni_domain_name = false
#🖤当使用 Quantumult X 在 M 芯片的 Mac 设备上作为局域网网关时，使用下面的参数来 跳过某些特定设备的 mitm 需求
#skip_src_ip = 192.168.4.50, 92.168.4.51
#🖤当多个不同的 TCP 连接（非域名类请求）的目标 IP 不同，但这些连接的 TSL 握手 SNI 字段相同时，如需跳过其中某些连接的 MitM hostname 匹配过程，可使用👇参数。
#skip_dst_ip = 123.44.55.4
#🖤hostname 为主机名，用,分隔多个
hostname = *.googlevideo.com

#🖤以下为证书&主机名部分
passphrase =
p12 =
